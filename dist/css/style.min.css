*{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%}body{display:flex;justify-content:center;align-items:center;font-family:Roboto,sans-serif;font-size:1.6rem;width:100%;background-color:#36384e}.main,body{position:relative}.main{width:375px}.main .newsletter{display:flex;align-items:center;flex-direction:column;width:100%;background-color:#fff;height:100dvh}.main .newsletter__img{width:100%;height:35%}.main .newsletter__img-img{width:100%;height:100%}.main .newsletter__img-img-desktop{display:none}.main .newsletter__text{padding:4rem 3rem}.main .newsletter__text-heading{font-size:3.5rem;color:#242742}.main .newsletter__text-description{margin:2rem 0}.main .newsletter__text-benefit{display:flex;padding:.8rem}.main .newsletter__text-benefit-info{margin-left:2rem}.main .newsletter__text-form{display:flex;flex-direction:column;padding:3rem 0}.main .newsletter__text-form-box{display:flex;justify-content:space-between}.main .newsletter__text-form-box label{color:#242742;font-size:1.2rem;font-weight:700}.main .newsletter__text-form-box-error{display:none;color:#ff6257;font-size:1.2rem;font-weight:700}.main .newsletter__text-form-email{margin-top:1rem;padding:1.7rem;color:#9294a0;border-radius:8px;border:1px solid #9294a0}.main .newsletter__text-form-email--active{border:1px solid #ff6257;background-color:#ffe8e4;color:#ff6257}.main .newsletter__text-form-btn{margin-top:3rem;padding:1.7rem;background-color:#242742;border-radius:8px;color:#fff;font-weight:700;border:none;cursor:pointer;transition:background-image .3s}.main .newsletter__text-form-btn:hover{background-image:linear-gradient(90deg,#f1527d,#ff683d);box-shadow:0 5px 10px #ff683d}.main .popup{display:none;justify-content:space-between;position:absolute;padding:3rem;top:0;left:0;right:0;bottom:0;width:100%;height:100dvh;background-color:#fff;z-index:1}.main .popup,.main .popup__text{align-items:flex-start;flex-direction:column}.main .popup__text{display:flex;justify-content:center;height:70%}.main .popup__text-heading{padding:4rem 0;font-size:3.5rem;line-height:3.5rem;color:#242742}.main .popup__text-info{line-height:2.4rem}.main .popup__text-info span{color:#242742;font-weight:700}.main .popup__btn{margin-top:4rem;padding:1.7rem;width:100%;background-color:#242742;border-radius:8px;color:#fff;font-weight:700;border:none;cursor:pointer;transition:background-image .3s}.main .popup__btn:hover{background-image:linear-gradient(90deg,#f1527d,#ff683d);box-shadow:0 5px 10px #ff683d}@media (min-width:1440px){body{min-height:100dvh}.main{width:1000px}.main .newsletter{justify-content:space-between;flex-direction:row;height:auto;border-radius:30px;border:20px solid #fff;overflow:hidden}.main .newsletter__img{display:flex;justify-content:center;width:40%;order:2}.main .newsletter__img-img{display:none}.main .newsletter__img-img-desktop{display:block}.main .newsletter__text{padding:3rem 5rem;margin-right:30px;display:flex;justify-content:center;flex-direction:column;width:60%;order:1}.main .newsletter__text-heading{font-size:6.5rem}.main .newsletter__text-description{margin:3rem 0;font-size:1.8rem}.main .newsletter__text-benefit{font-size:1.7rem}.main .popup{display:none;justify-content:center;align-items:flex-start;flex-direction:column;padding:0 5rem;top:50%;left:50%;width:500px;height:500px;border-radius:30px;transform:translate(-50%,-50%)}.main .popup__heading{padding:3rem 0;font-size:6rem;line-height:6rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
